{
  "name": "grunt-express-server",
  "description": "Grunt task for running an Express Server that works great with LiveReload + Watch/Regarde",
  "version": "0.4.11",
  "homepage": "https://github.com/ericclemmons/grunt-express-server",
  "author": {
    "name": "Eric Clemmons",
    "email": "eric@smarterspam.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ericclemmons/grunt-express-server.git"
  },
  "bugs": {
    "url": "https://github.com/ericclemmons/grunt-express-server/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/ericclemmons/grunt-express-server/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "./node_modules/.bin/grunt"
  },
  "devDependencies": {
    "coffee-script": "1.6.3",
    "express": "~3.4.5",
    "grunt": "~0.4.0",
    "grunt-cli": "~0.1.6",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-jshint": "~0.7.2",
    "grunt-contrib-nodeunit": "~0.2.2",
    "grunt-contrib-watch": "~0.5.3"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "express",
    "server"
  ],
  "readme": "# grunt-express-server\n\n[![Build Status](https://travis-ci.org/ericclemmons/grunt-express-server.png?branch=master)](https://travis-ci.org/ericclemmons/grunt-express-server)\n[![Dependencies](https://david-dm.org/ericclemmons/grunt-express-server.png)](https://david-dm.org/ericclemmons/grunt-express-server)\n[![devDependencies](https://david-dm.org/ericclemmons/grunt-express-server/dev-status.png)](https://david-dm.org/ericclemmons/grunt-express-server#info=devDependencies&view=table)\n\n> Simple grunt task for running an Express server that works great with LiveReload + Watch/Regarde\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-express-server --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-express-server');\n```\n\n## The `express` task\n\n### Setup\n\nIn your project's Gruntfile, you can create one or multiple servers:\n\n```js\ngrunt.initConfig({\n  express: {\n    options: {\n      // Override defaults here\n    },\n    dev: {\n      options: {\n        script: 'path/to/dev/server.js'\n      }\n    },\n    prod: {\n      options: {\n        script: 'path/to/prod/server.js',\n        node_env: 'production'\n      }\n    },\n    test: {\n      options: {\n        script: 'path/to/test/server.js'\n      }\n    }\n  }\n});\n```\n\nYou can override the default `options` either in the root of the `express` config\nor within each individual server task.\n\n### Default `options`\n\n```js\n  express: {\n    options: {\n      // Override the command used to start the server.\n      // (e.g. 'coffee' instead of the default 'node' to enable CoffeeScript support)\n      cmd: process.argv[0],\n\n      // Will turn into: `node path/to/server.js ARG1 ARG2 ... ARGN`\n      args: [ ],\n\n      // Setting to `false` will effectively just run `node path/to/server.js`\n      background: true,\n\n      // Called when the spawned server throws errors\n      fallback: function() {},\n\n      // Override node env's PORT\n      port: 3000,\n\n      // Override node env's NODE_ENV\n      node_env: undefined,\n\n      // Consider the server to be \"running\" after an explicit delay (in milliseconds)\n      // (e.g. when server has no initial output)\n      delay: 0,\n\n      // Regular expression that matches server output to indicate it is \"running\"\n      output: \".+\",\n\n      // Set --debug\n      debug: false\n    }\n  }\n```\n\n### Usage\n\nBy default, unless `delay` or `output` has been customized,\n**the server is considered \"running\" once any output is logged to the console**,\nupon which control is passed back to grunt.\n\nTypically, this is normally:\n\n> Express server listening on port 3000\n\nIf you log output *before* the server is running, either set `delay` or `output` to indicate\nwhen the server has officially started.\n\n#### Starting the server\n\nIf you have a server defined named `dev`, you can start the server by running `express:dev`.\n\n#### Stopping the server\n\nSimilarly, if you start the `dev` server with `express:dev`, you can stop the server\nwith `express:dev:stop`.\n\n#### With [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch)\n\n```js\ngrunt.initConfig({\n  watch: {\n    express: {\n      files:  [ '**/*.js' ],\n      tasks:  [ 'express:dev' ],\n      options: {\n        spawn: false // Without this option specified express won't be reloaded\n      }\n    }\n  }\n});\n\ngrunt.registerTask('server', [ 'express:dev', 'watch' ])\n```\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n- v0.4.11 – Revert v0.4.10 until Travis can reproduce it\n- v0.4.10 – Another attempt to fix #28 & #30's server restarting issue ([#31](https://github.com/ericclemmons/grunt-express-server/pull/31))\n- v0.4.9 – Revert v0.4.8 until [#30](https://github.com/ericclemmons/grunt-express-server/issues/30#issuecomment-29931192) is resolved\n- v0.4.8 – Fix issue with start/restarting multiple instances ([#29](https://github.com/ericclemmons/grunt-express-server/pull/29))\n- v0.4.7 – Remove broken `error` option ([#27](https://github.com/ericclemmons/grunt-express-server/issues/27))\n- v0.4.6 – Store running servers on `process._servers[target]` ([#22](https://github.com/ericclemmons/grunt-express-server/issues/22))\n- v0.4.5 – Support multiple servers running at once ([#23](https://github.com/ericclemmons/grunt-express-server/pull/23))\n- v0.4.4 - Fix for using `grunt-env` to change environments, thanks to @FredrikAppelros ([#20](https://github.com/ericclemmons/grunt-express-server/pull/20))\n- v0.4.3 - Add `cmd` option that defaults to Node, but can be set to `coffee` for Coffeescript support, thanks to @JonET ([#15](https://github.com/ericclemmons/grunt-express-server/pull/15))\n- v0.4.2 - Add `debug` option that gets enables Node's debugger, ideally for use with [node-inspector](https://github.com/node-inspector/node-inspector)\n- v0.4.1 - Add `node_env` option that sets `NODE_ENV` when running the server & restores original env upon closing, thanks to @jgable!\n- v0.4.0\n  - Add `delay` option that, when set, passes control back to grunt after timeout\n  - Add `output` regular expression option that, when set, waits for matching message before passing control back to grunt\n- v0.3.1 - Try to force notification that `express` task has finished as much as possible\n- v0.3.0 - `express` is now a multitask with customizable options, better error handling and `:stop` task\n- v0.2.0\n  - Change `express-server` task to `express`\n  - Config is set via `express: '...'` instead of `server: { script: '...' } `\n- v0.1.0 - Initial import from [Genesis Skeleton](https://github.com/ericclemmons/genesis-skeleton) & release\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/ericclemmons/grunt-express-server/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-express-server@0.4.11",
  "_from": "grunt-express-server@~0.4.11"
}
